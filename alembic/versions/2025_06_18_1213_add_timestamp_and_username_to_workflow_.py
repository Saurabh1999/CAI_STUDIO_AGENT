"""Add timestamp and username to workflow and workflow template table

Revision ID: ebf7f8932aa4
Revises: b70a3a5073c4
Create Date: 2025-06-18 12:13:00.070862

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ebf7f8932aa4'
down_revision: Union[str, None] = 'b70a3a5073c4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Helper to add a column if it doesn't exist (best effort for SQLite/dev)
    def safe_add_column(table, column):
        try:
            op.add_column(table, column)
        except Exception as e:
            print(f"Skipping add_column for {table}.{column.name}: {e}")

    # Try to add columns, skip if they already exist
    safe_add_column('workflow_templates', sa.Column('created_at', sa.DateTime(), nullable=True))
    safe_add_column('workflow_templates', sa.Column('updated_at', sa.DateTime(), nullable=True))
    safe_add_column('workflow_templates', sa.Column('created_by_username', sa.String(), nullable=True))
    safe_add_column('workflow_templates', sa.Column('updated_by_username', sa.String(), nullable=True))
    safe_add_column('workflows', sa.Column('created_at', sa.DateTime(), nullable=True))
    safe_add_column('workflows', sa.Column('updated_at', sa.DateTime(), nullable=True))
    safe_add_column('workflows', sa.Column('created_by_username', sa.String(), nullable=True))
    safe_add_column('workflows', sa.Column('updated_by_username', sa.String(), nullable=True))

    # Set default values for workflows
    op.execute(
        """
        UPDATE workflows
        SET created_by_username = COALESCE(created_by_username, 'Unknown'),
            updated_by_username = COALESCE(updated_by_username, 'Unknown'),
            created_at = COALESCE(created_at, CURRENT_TIMESTAMP),
            updated_at = COALESCE(updated_at, CURRENT_TIMESTAMP)
        """
    )

    # Set default values for workflow_templates
    # For pre_packaged = 1 (True), set to 'Cloudera', else 'Unknown'
    op.execute(
        """
        UPDATE workflow_templates
        SET created_by_username = 
            CASE 
                WHEN pre_packaged = 1 THEN 'Cloudera'
                ELSE COALESCE(created_by_username, 'Unknown')
            END,
            updated_by_username = 
            CASE 
                WHEN pre_packaged = 1 THEN 'Cloudera'
                ELSE COALESCE(updated_by_username, 'Unknown')
            END,
            created_at = COALESCE(created_at, CURRENT_TIMESTAMP),
            updated_at = COALESCE(updated_at, CURRENT_TIMESTAMP)
        """
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('workflows', 'updated_by_username')
    op.drop_column('workflows', 'created_by_username')
    op.drop_column('workflows', 'updated_at')
    op.drop_column('workflows', 'created_at')
    op.drop_column('workflow_templates', 'updated_by_username')
    op.drop_column('workflow_templates', 'created_by_username')
    op.drop_column('workflow_templates', 'updated_at')
    op.drop_column('workflow_templates', 'created_at')
    # ### end Alembic commands ###
